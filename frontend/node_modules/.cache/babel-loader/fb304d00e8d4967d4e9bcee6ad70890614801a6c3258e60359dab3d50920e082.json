{"ast":null,"code":"import { create } from \"zustand\";\nconst useStore = create(set => ({\n  logPage: false,\n  modal: false,\n  onlineUser: {\n    username: \"\",\n    password: \"\"\n  },\n  AllUsers: [],\n  AllPokes: [],\n  changeLogPage: page => set({\n    logPage: page\n  }),\n  RegisterUser: value => set(state => ({\n    onlineUser: value,\n    AllUsers: [...state.AllUsers, value]\n  })),\n  LogInUser: (username, password) => set(state => ({\n    onlineUser: {\n      username: username,\n      password: password\n    }\n  })),\n  PokeUser: value => set(state => ({\n    AllPokes: [...state.AllPokes, value]\n  })),\n  ShowModal: value => set({\n    modal: value\n  }),\n  DeleteUser: info => set(state => ({\n    AllUsers: state.AllUsers.filter(user => user.username !== info),\n    AllPokes: state.AllPokes.filter(user => user.username !== info && user.pokedUser !== info)\n  }))\n}));\nexport default useStore;","map":{"version":3,"names":["create","useStore","set","logPage","modal","onlineUser","username","password","AllUsers","AllPokes","changeLogPage","page","RegisterUser","value","state","LogInUser","PokeUser","ShowModal","DeleteUser","info","filter","user","pokedUser"],"sources":["C:/Users/irma1/WebstormProjects/Node/node5/frontend/src/store/main.js"],"sourcesContent":["import {create} from \"zustand\";\r\n\r\n\r\nconst useStore = create((set) => ({\r\n\r\n    logPage: false,\r\n    modal: false,\r\n\r\n    onlineUser: {\r\n        username: \"\",\r\n        password: \"\",\r\n    },\r\n\r\n    AllUsers: [],\r\n    AllPokes: [],\r\n\r\n\r\n    changeLogPage: (page) => set({logPage: page}),\r\n\r\n    RegisterUser: (value) => set((state) => ({\r\n        onlineUser: value,\r\n\r\n        AllUsers: [...state.AllUsers, value],\r\n    })),\r\n\r\n    LogInUser: (username, password) => set((state) => ({\r\n        onlineUser: {\r\n            username: username,\r\n            password: password,\r\n        },\r\n    })),\r\n\r\n    PokeUser: (value) => set((state) => ({\r\n        AllPokes: [...state.AllPokes, value],\r\n    })),\r\n\r\n    ShowModal: (value) => set({modal : value}),\r\n\r\n    DeleteUser: (info) => set((state) => ({\r\n\r\n        AllUsers: state.AllUsers.filter(user => user.username !== info),\r\n        AllPokes: state.AllPokes.filter(user => user.username !== info && user.pokedUser !== info),\r\n    }))\r\n\r\n\r\n}))\r\n\r\nexport default useStore;"],"mappings":"AAAA,SAAQA,MAAM,QAAO,SAAS;AAG9B,MAAMC,QAAQ,GAAGD,MAAM,CAAEE,GAAG,KAAM;EAE9BC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,KAAK;EAEZC,UAAU,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACd,CAAC;EAEDC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EAGZC,aAAa,EAAGC,IAAI,IAAKT,GAAG,CAAC;IAACC,OAAO,EAAEQ;EAAI,CAAC,CAAC;EAE7CC,YAAY,EAAGC,KAAK,IAAKX,GAAG,CAAEY,KAAK,KAAM;IACrCT,UAAU,EAAEQ,KAAK;IAEjBL,QAAQ,EAAE,CAAC,GAAGM,KAAK,CAACN,QAAQ,EAAEK,KAAK;EACvC,CAAC,CAAC,CAAC;EAEHE,SAAS,EAAEA,CAACT,QAAQ,EAAEC,QAAQ,KAAKL,GAAG,CAAEY,KAAK,KAAM;IAC/CT,UAAU,EAAE;MACRC,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;IACd;EACJ,CAAC,CAAC,CAAC;EAEHS,QAAQ,EAAGH,KAAK,IAAKX,GAAG,CAAEY,KAAK,KAAM;IACjCL,QAAQ,EAAE,CAAC,GAAGK,KAAK,CAACL,QAAQ,EAAEI,KAAK;EACvC,CAAC,CAAC,CAAC;EAEHI,SAAS,EAAGJ,KAAK,IAAKX,GAAG,CAAC;IAACE,KAAK,EAAGS;EAAK,CAAC,CAAC;EAE1CK,UAAU,EAAGC,IAAI,IAAKjB,GAAG,CAAEY,KAAK,KAAM;IAElCN,QAAQ,EAAEM,KAAK,CAACN,QAAQ,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACf,QAAQ,KAAKa,IAAI,CAAC;IAC/DV,QAAQ,EAAEK,KAAK,CAACL,QAAQ,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACf,QAAQ,KAAKa,IAAI,IAAIE,IAAI,CAACC,SAAS,KAAKH,IAAI;EAC7F,CAAC,CAAC;AAGN,CAAC,CAAC,CAAC;AAEH,eAAelB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}