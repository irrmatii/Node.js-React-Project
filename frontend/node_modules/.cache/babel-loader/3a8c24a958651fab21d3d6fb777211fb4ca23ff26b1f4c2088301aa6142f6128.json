{"ast":null,"code":"import { create } from \"zustand\";\nconst useStore = create(set => ({\n  logPage: false,\n  logTitle: \"Register\",\n  insideNav: false,\n  onlineUser: {\n    username: \"\",\n    token: \"\"\n  },\n  AllUsers: [],\n  MsgReceiver: \"\",\n  AllMessages: [],\n  AllCards: [],\n  AllIcons: [],\n  selected: false,\n  OtherUsersIcons: [],\n  AllRequestsIcons: [],\n  askedIcons: [],\n  changeLogPage: (page, title) => set({\n    logPage: page,\n    logTitle: title\n  }),\n  changeMainNav: (nav, title) => set({\n    insideNav: nav,\n    logTitle: title\n  }),\n  RegisterUser: value => set(state => ({\n    onlineUser: value,\n    AllUsers: value\n  })),\n  LogInUser: (userInfo, userToken) => set(state => ({\n    onlineUser: {\n      username: userInfo,\n      token: userToken\n    }\n  })),\n  ChooseReceiver: value => set({\n    MsgReceiver: value\n  }),\n  GetAllMessages: value => set(state => ({\n    AllMessages: value\n  })),\n  GetAllCards: value => set(state => ({\n    AllCards: value\n  })),\n  GetAllIcons: value => set(state => ({\n    AllIcons: value\n  })),\n  GetVisitedUserIcons: value => set(state => ({\n    OtherUsersIcons: value\n  })),\n  GetAllRequests: value => set(state => ({\n    AllRequestsIcons: value\n  })),\n  setSelected: value => set(state => ({\n    selected: value\n  })),\n  AskForIcons: value => set(state => ({\n    askedIcons: [...state.askedIcons, value]\n  })),\n  ClearAskedIcons: value => set(state => ({\n    askedIcons: []\n  }))\n}));\nexport default useStore;","map":{"version":3,"names":["create","useStore","set","logPage","logTitle","insideNav","onlineUser","username","token","AllUsers","MsgReceiver","AllMessages","AllCards","AllIcons","selected","OtherUsersIcons","AllRequestsIcons","askedIcons","changeLogPage","page","title","changeMainNav","nav","RegisterUser","value","state","LogInUser","userInfo","userToken","ChooseReceiver","GetAllMessages","GetAllCards","GetAllIcons","GetVisitedUserIcons","GetAllRequests","setSelected","AskForIcons","ClearAskedIcons"],"sources":["C:/Users/irma1/WebstormProjects/Node/node5/frontend/src/store/main.js"],"sourcesContent":["import {create} from \"zustand\";\r\n\r\n\r\nconst useStore = create((set) => ({\r\n\r\n    logPage: false,\r\n\r\n    logTitle: \"Register\",\r\n\r\n    insideNav: false,\r\n\r\n    onlineUser: {\r\n        username: \"\",\r\n        token: \"\"\r\n    },\r\n\r\n    AllUsers: [],\r\n\r\n    MsgReceiver: \"\",\r\n\r\n    AllMessages: [],\r\n\r\n    AllCards: [],\r\n\r\n    AllIcons: [],\r\n\r\n    selected: false,\r\n\r\n    OtherUsersIcons: [],\r\n\r\n    AllRequestsIcons: [],\r\n\r\n    askedIcons: [],\r\n\r\n\r\n    changeLogPage: (page, title) => set({\r\n        logPage: page,\r\n        logTitle: title\r\n    }),\r\n\r\n    changeMainNav: (nav, title) => set({\r\n        insideNav: nav,\r\n        logTitle: title\r\n    }),\r\n\r\n    RegisterUser: (value) => set((state) => ({\r\n        onlineUser: value,\r\n\r\n        AllUsers: value,\r\n    })),\r\n\r\n    LogInUser: (userInfo, userToken) => set((state) => ({\r\n        onlineUser: {\r\n            username: userInfo,\r\n            token: userToken\r\n        }\r\n    })),\r\n\r\n    ChooseReceiver: (value) => set({MsgReceiver: value}),\r\n\r\n    GetAllMessages: (value) => set((state) => ({\r\n        AllMessages: value\r\n    })),\r\n\r\n    GetAllCards: (value) => set((state) => ({\r\n        AllCards: value\r\n    })),\r\n\r\n    GetAllIcons: (value) => set((state) => ({\r\n        AllIcons: value\r\n    })),\r\n\r\n    GetVisitedUserIcons: (value) => set((state) => ({\r\n        OtherUsersIcons: value\r\n    })),\r\n\r\n    GetAllRequests: (value) => set((state) => ({\r\n        AllRequestsIcons: value\r\n    })),\r\n\r\n    setSelected: (value) => set((state) => ({\r\n        selected: value\r\n    })),\r\n\r\n    AskForIcons: (value) => set((state) => ({\r\n        askedIcons: [...state.askedIcons, value]\r\n    })),\r\n\r\n    ClearAskedIcons: (value) => set((state) => ({\r\n        askedIcons: []\r\n    }))\r\n\r\n}))\r\n\r\nexport default useStore;"],"mappings":"AAAA,SAAQA,MAAM,QAAO,SAAS;AAG9B,MAAMC,QAAQ,GAAGD,MAAM,CAAEE,GAAG,KAAM;EAE9BC,OAAO,EAAE,KAAK;EAEdC,QAAQ,EAAE,UAAU;EAEpBC,SAAS,EAAE,KAAK;EAEhBC,UAAU,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAC;EAEDC,QAAQ,EAAE,EAAE;EAEZC,WAAW,EAAE,EAAE;EAEfC,WAAW,EAAE,EAAE;EAEfC,QAAQ,EAAE,EAAE;EAEZC,QAAQ,EAAE,EAAE;EAEZC,QAAQ,EAAE,KAAK;EAEfC,eAAe,EAAE,EAAE;EAEnBC,gBAAgB,EAAE,EAAE;EAEpBC,UAAU,EAAE,EAAE;EAGdC,aAAa,EAAEA,CAACC,IAAI,EAAEC,KAAK,KAAKlB,GAAG,CAAC;IAChCC,OAAO,EAAEgB,IAAI;IACbf,QAAQ,EAAEgB;EACd,CAAC,CAAC;EAEFC,aAAa,EAAEA,CAACC,GAAG,EAAEF,KAAK,KAAKlB,GAAG,CAAC;IAC/BG,SAAS,EAAEiB,GAAG;IACdlB,QAAQ,EAAEgB;EACd,CAAC,CAAC;EAEFG,YAAY,EAAGC,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IACrCnB,UAAU,EAAEkB,KAAK;IAEjBf,QAAQ,EAAEe;EACd,CAAC,CAAC,CAAC;EAEHE,SAAS,EAAEA,CAACC,QAAQ,EAAEC,SAAS,KAAK1B,GAAG,CAAEuB,KAAK,KAAM;IAChDnB,UAAU,EAAE;MACRC,QAAQ,EAAEoB,QAAQ;MAClBnB,KAAK,EAAEoB;IACX;EACJ,CAAC,CAAC,CAAC;EAEHC,cAAc,EAAGL,KAAK,IAAKtB,GAAG,CAAC;IAACQ,WAAW,EAAEc;EAAK,CAAC,CAAC;EAEpDM,cAAc,EAAGN,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IACvCd,WAAW,EAAEa;EACjB,CAAC,CAAC,CAAC;EAEHO,WAAW,EAAGP,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IACpCb,QAAQ,EAAEY;EACd,CAAC,CAAC,CAAC;EAEHQ,WAAW,EAAGR,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IACpCZ,QAAQ,EAAEW;EACd,CAAC,CAAC,CAAC;EAEHS,mBAAmB,EAAGT,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IAC5CV,eAAe,EAAES;EACrB,CAAC,CAAC,CAAC;EAEHU,cAAc,EAAGV,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IACvCT,gBAAgB,EAAEQ;EACtB,CAAC,CAAC,CAAC;EAEHW,WAAW,EAAGX,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IACpCX,QAAQ,EAAEU;EACd,CAAC,CAAC,CAAC;EAEHY,WAAW,EAAGZ,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IACpCR,UAAU,EAAE,CAAC,GAAGQ,KAAK,CAACR,UAAU,EAAEO,KAAK;EAC3C,CAAC,CAAC,CAAC;EAEHa,eAAe,EAAGb,KAAK,IAAKtB,GAAG,CAAEuB,KAAK,KAAM;IACxCR,UAAU,EAAE;EAChB,CAAC,CAAC;AAEN,CAAC,CAAC,CAAC;AAEH,eAAehB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}